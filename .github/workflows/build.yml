name: Build and Test

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  build:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        java-version: [21]
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Set up JDK ${{ matrix.java-version }}
      uses: actions/setup-java@v4
      with:
        java-version: ${{ matrix.java-version }}
        distribution: 'temurin'
        
    - name: Cache Gradle packages
      uses: actions/cache@v4
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-
          
    - name: Validate Gradle wrapper
      uses: gradle/wrapper-validation-action@v3
      
    - name: Make gradlew executable
      run: chmod +x ./gradlew
      
    - name: Compile code
      run: ./gradlew compileJava --no-daemon
      
    - name: Compile test code  
      run: ./gradlew compileTestJava --no-daemon
      
    - name: Run unit tests
      run: ./gradlew test --no-daemon --continue
      
    - name: Build application
      run: ./gradlew build --no-daemon
      
    - name: Publish test results
      uses: EnricoMi/publish-unit-test-result-action@v2
      if: always()
      with:
        files: |
          build/test-results/test/*.xml
          
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      if: success()
      with:
        name: jar-artifacts-java-${{ matrix.java-version }}
        path: build/libs/
        
    - name: Upload test coverage
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-coverage-java-${{ matrix.java-version }}
        path: build/reports/